"""add timeframe to signals

Revision ID: 86a696f414e9
Revises: 932b7750a282
Create Date: 2025-06-17 09:48:47.116720

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '86a696f414e9'
down_revision: Union[str, None] = '932b7750a282'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('licenses', sa.Column('expires_at', sa.DateTime(), nullable=True))
    op.alter_column('licenses', 'user_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('licenses', 'is_active',
               existing_type=sa.BOOLEAN(),
               nullable=True)
    op.alter_column('licenses', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True,
               existing_server_default=sa.text('now()'))
    op.drop_column('licenses', 'updated_at')
    op.drop_column('licenses', 'expiration_date')
    # Create the ENUM type first
    timeframe_enum = sa.Enum('M1', 'M5', 'M15', 'M30', 'H1', 'H4', 'D1', name='signaltimeframe')
    timeframe_enum.create(op.get_bind(), checkfirst=True)
    op.add_column('signals', sa.Column('timeframe', timeframe_enum, nullable=False, server_default='M1'))
    op.add_column('signals', sa.Column('entry_price', sa.Float(), nullable=False))
    op.add_column('signals', sa.Column('stop_loss', sa.Float(), nullable=False))
    op.add_column('signals', sa.Column('label', sa.String(), nullable=True))
    op.add_column('signals', sa.Column('is_news_filtered', sa.Boolean(), nullable=True))
    op.add_column('signals', sa.Column('trend_leg_id', sa.String(), nullable=True))
    op.add_column('signals', sa.Column('memory_lock', sa.String(), nullable=True))
    op.drop_column('signals', 'sl')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('signals', sa.Column('sl', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False))
    op.drop_column('signals', 'memory_lock')
    op.drop_column('signals', 'trend_leg_id')
    op.drop_column('signals', 'is_news_filtered')
    op.drop_column('signals', 'label')
    op.drop_column('signals', 'stop_loss')
    op.drop_column('signals', 'entry_price')
    op.drop_column('signals', 'timeframe')
    op.add_column('licenses', sa.Column('expiration_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
    op.add_column('licenses', sa.Column('updated_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=False))
    op.alter_column('licenses', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False,
               existing_server_default=sa.text('now()'))
    op.alter_column('licenses', 'is_active',
               existing_type=sa.BOOLEAN(),
               nullable=False)
    op.alter_column('licenses', 'user_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.drop_column('licenses', 'expires_at')
    timeframe_enum = sa.Enum('M1', 'M5', 'M15', 'M30', 'H1', 'H4', 'D1', name='signaltimeframe')
    timeframe_enum.drop(op.get_bind(), checkfirst=True)
    # ### end Alembic commands ###
