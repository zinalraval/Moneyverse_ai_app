"""Add generated_time and last_updated to Signal model

Revision ID: fc30a0fea708
Revises: 53646699d73f
Create Date: 2025-06-12 16:29:14.823758

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'fc30a0fea708'
down_revision: Union[str, None] = '53646699d73f'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # Create enums first
    signaltype = sa.Enum('SCALPING', 'INTRADAY', 'SWING', name='signaltype')
    signaldirection = sa.Enum('BUY', 'SELL', name='signaldirection')
    signalstatus = sa.Enum('ACTIVE', 'COMPLETED', 'CANCELLED', name='signalstatus')
    signaltype.create(op.get_bind(), checkfirst=True)
    signaldirection.create(op.get_bind(), checkfirst=True)
    signalstatus.create(op.get_bind(), checkfirst=True)
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('signals', sa.Column('logic_note', sa.String(), nullable=True))
    op.add_column('signals', sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True))
    op.add_column('signals', sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True))
    op.add_column('signals', sa.Column('exit_price', sa.Float(), nullable=True))
    op.add_column('signals', sa.Column('pnl', sa.Float(), nullable=True))
    op.add_column('signals', sa.Column('exit_time', sa.DateTime(timezone=True), nullable=True))
    op.alter_column('signals', 'user_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('signals', 'type',
               existing_type=sa.VARCHAR(length=10),
               type_=signaltype,
               existing_nullable=False,
               postgresql_using="type::signaltype")
    op.alter_column('signals', 'direction',
               existing_type=sa.VARCHAR(length=10),
               type_=signaldirection,
               existing_nullable=False,
               postgresql_using="direction::signaldirection")
    op.alter_column('signals', 'tp1',
               existing_type=sa.DOUBLE_PRECISION(precision=53),
               nullable=False)
    op.alter_column('signals', 'tp2',
               existing_type=sa.DOUBLE_PRECISION(precision=53),
               nullable=False)
    op.alter_column('signals', 'sl',
               existing_type=sa.DOUBLE_PRECISION(precision=53),
               nullable=False)
    op.alter_column('signals', 'status',
               existing_type=sa.VARCHAR(length=20),
               type_=signalstatus,
               nullable=True,
               postgresql_using="status::signalstatus")
    op.alter_column('signals', 'generated_time',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               nullable=True)
    op.alter_column('signals', 'last_updated',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               nullable=True)
    op.drop_index('ix_signals_pair', table_name='signals')
    op.drop_column('signals', 'label')
    op.add_column('users', sa.Column('access_token', sa.String(), nullable=True))
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('users', 'access_token')
    op.add_column('signals', sa.Column('label', sa.VARCHAR(length=255), autoincrement=False, nullable=True))
    op.create_index('ix_signals_pair', 'signals', ['pair'], unique=False)
    op.alter_column('signals', 'last_updated',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('signals', 'generated_time',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('signals', 'status',
               existing_type=sa.Enum('ACTIVE', 'COMPLETED', 'CANCELLED', name='signalstatus'),
               type_=sa.VARCHAR(length=20),
               nullable=False)
    op.alter_column('signals', 'sl',
               existing_type=sa.DOUBLE_PRECISION(precision=53),
               nullable=True)
    op.alter_column('signals', 'tp2',
               existing_type=sa.DOUBLE_PRECISION(precision=53),
               nullable=True)
    op.alter_column('signals', 'tp1',
               existing_type=sa.DOUBLE_PRECISION(precision=53),
               nullable=True)
    op.alter_column('signals', 'direction',
               existing_type=sa.Enum('BUY', 'SELL', name='signaldirection'),
               type_=sa.VARCHAR(length=10),
               existing_nullable=False)
    op.alter_column('signals', 'type',
               existing_type=sa.Enum('SCALPING', 'INTRADAY', 'SWING', name='signaltype'),
               type_=sa.VARCHAR(length=10),
               existing_nullable=False)
    op.alter_column('signals', 'user_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.drop_column('signals', 'exit_time')
    op.drop_column('signals', 'pnl')
    op.drop_column('signals', 'exit_price')
    op.drop_column('signals', 'updated_at')
    op.drop_column('signals', 'created_at')
    op.drop_column('signals', 'logic_note')
    # Drop enums at the end
    signaltype = sa.Enum('SCALPING', 'INTRADAY', 'SWING', name='signaltype')
    signaldirection = sa.Enum('BUY', 'SELL', name='signaldirection')
    signalstatus = sa.Enum('ACTIVE', 'COMPLETED', 'CANCELLED', name='signalstatus')
    signaltype.drop(op.get_bind(), checkfirst=True)
    signaldirection.drop(op.get_bind(), checkfirst=True)
    signalstatus.drop(op.get_bind(), checkfirst=True)
    # ### end Alembic commands ###
